@using Microsoft.AspNetCore.Identity
@using SellingBook.Models.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!-- Inline CSS for dropdown and submenu styling -->
<style>
    /* Animation for the main dropdown */
    .dropdown-menu.animated-dropdown {
        opacity: 0;
        transform: translateY(-10px);
        transition: all 0.3s ease;
    }

    .dropdown-menu.show.animated-dropdown {
        opacity: 1;
        transform: translateY(0);
    }

    /* Submenu styling */
    .dropdown-submenu {
        position: relative;
    }

    .dropdown-submenu .dropdown-menu {
        top: 0;
        right: 100%; /* Positions the submenu to the left */
        left: auto;
        margin-top: -0.5rem;
        display: none; /* Hidden by default */
        opacity: 0;
        visibility: hidden;
        transform: translateX(-10px); /* Starts slightly to the left */
        transition: all 0.3s ease; /* Smooth transition for animation */
    }

    .dropdown-submenu.show > .dropdown-menu {
        display: block; /* Shown when parent has 'show' class */
        opacity: 1;
        visibility: visible;
        transform: translateX(0); /* Moves to final position */
    }

    /* Hover effect for submenu toggle */
    .dropdown-submenu > .dropdown-item:hover {
        background-color: #fff;
    }
</style>

<!-- HTML structure for the dropdown menu -->
<li class="nav-item dropdown">
    <!-- Dropdown trigger with Bootstrap icon -->
    <a class="nav-link text-dark nav-icon" href="#" id="accountDropdown" role="button" 
       data-bs-toggle="dropdown" aria-expanded="false">
        <i class="bi bi-person"></i>
    </a>
    <!-- Main dropdown menu -->
    <ul class="dropdown-menu dropdown-menu-end animated-dropdown" aria-labelledby="accountDropdown">
        @if (SignInManager.IsSignedIn(User))
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null) 
            {
                var userName = await UserManager.GetUserNameAsync(user);
                var isAdmin = await UserManager.IsInRoleAsync(user, "Admin");

                <li><span class="dropdown-item-text">Hello, @userName!</span></li>
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>

                @if (isAdmin)
                {
                        <li class="dropdown-submenu">
                            <a class="dropdown-item submenu-toggle" href="#">Admin ▸</a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" asp-area="Admin" asp-controller="Product" asp-action="Index">Products</a></li>
                                <li><a class="dropdown-item" asp-area="Admin" asp-controller="Categories" asp-action="Index">Categories</a></li>
                                <li><a class="dropdown-item" asp-area="Admin" asp-controller="Statistic" asp-action="DailyStats">DailyStatistic</a></li>
                                <li><a class="dropdown-item" asp-area="Admin" asp-controller="Statistic" asp-action="MonthlyStats">MonthlyStats</a></li>
                                <li><a class="dropdown-item" asp-area="Admin" asp-controller="Coupon" asp-action="Index">Coupons</a></li>
                            </ul>
                        </li>
                }

                <li>
                    <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" 
                          asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            }
            else
            {
                // If the user is null, treat them as not signed in
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
            }
        }
        else
        {
        <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
        }
    </ul>
</li>

<!-- Bootstrap 5 JavaScript bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Custom JavaScript for submenu functionality -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize Bootstrap dropdowns
        document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(function (dropdownTriggerEl) {
            new bootstrap.Dropdown(dropdownTriggerEl);
        });

        // Toggle submenu on click
        document.querySelectorAll('.submenu-toggle').forEach(function (toggle) {
            toggle.addEventListener('click', function (e) {
                e.preventDefault(); // Prevent default link behavior
                e.stopPropagation(); // Prevent main dropdown from closing
                let submenu = this.closest('.dropdown-submenu');
                submenu.classList.toggle('show'); // Toggle submenu visibility
            });
        });

        // Close submenu when main dropdown hides
        document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(function (trigger) {
            trigger.addEventListener('hide.bs.dropdown', function () {
                document.querySelectorAll('.dropdown-submenu').forEach(function (submenu) {
                    submenu.classList.remove('show'); // Remove 'show' class from submenu
                });
            });
        });
    });
</script>