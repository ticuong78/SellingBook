@{
    ViewData["Title"] = "Coupon Management";
}

<h2>Coupon Management</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Coupon Code</th>
            <th>Discount Value</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="couponTable">
    </tbody>
</table>

<button class="btn btn-primary" onclick="openAddModal()">Add Coupon</button>

<div id="couponModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add / Update Coupon</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="couponId">
                <div class="mb-3">
                    <label for="couponCode" class="form-label">Coupon Code:</label>
                    <input type="text" id="couponCode" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="discountValue" class="form-label">Discount Value:</label>
                    <input type="number" id="discountValue" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="isActive" class="form-label">Status:</label>
                    <select id="isActive" class="form-select">
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
                <div id="couponErrorMessage" class="alert alert-danger mt-2" style="display:none;"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="saveCoupon()">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
<script>
    $(document).ready(function () {
        loadCoupons();

        $('#couponModal').on('hidden.bs.modal', function () {
            $('#couponErrorMessage').hide();
        });
    });

    async function loadCoupons() {
        try {
            const response = await fetch('/Admin/Coupon/GetAll');
            if (!response.ok) {
                console.error(`Error loading coupons: ${response.status}`);
                showAlert('An error occurred while loading data.', 'danger');
                return;
            }
            const coupons = await response.json();

            let tableHtml = "";
            coupons.forEach(coupon => {
                tableHtml += `
                    <tr>
                        <td>${coupon.couponId}</td>
                        <td>${coupon.code}</td>
                        <td>${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(coupon.discountValue)}</td>
                        <td>${coupon.isActive ? '<span class="badge bg-success">Active</span>' : '<span class="badge bg-danger">Inactive</span>'}</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="openEditModal(${coupon.couponId}, '${coupon.code}', ${coupon.discountValue}, ${coupon.isActive})">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteCoupon(${coupon.couponId})">Delete</button>
                        </td>
                    </tr>
                `;
            });

            $("#couponTable").html(tableHtml);

        } catch (error) {
            console.error("An unexpected error occurred while loading coupons:", error);
            showAlert('An error occurred while loading data.', 'danger');
        }
    }

    function openAddModal() {
        $("#couponId").val("");
        $("#couponCode").val("");
        $("#discountValue").val("");
        $("#isActive").val("true");
        $("#couponModal").modal("show");
    }

    function openEditModal(id, code, discountValue, isActive) {
        $("#couponId").val(id);
        $("#couponCode").val(code);
        $("#discountValue").val(discountValue);
        $("#isActive").val(isActive);
        $("#couponModal").modal("show");
    }

    async function saveCoupon() {
        const id = $("#couponId").val();
        const code = $("#couponCode").val().trim();
        const discountValue = $("#discountValue").val();
        const isActive = $("#isActive").val() === "true";

        if (!code) {
            showAlert("Please enter the coupon code.", 'danger');
            return;
        }
        if (isNaN(discountValue) || parseFloat(discountValue) <= 0) {
            showAlert("Please enter a valid discount value.", 'danger');
            return;
        }

        const method = id ? "PUT" : "POST";
        const url = id ? `/Admin/Coupon/Update/${id}` : "/Admin/Coupon/Create";

        try {
            const response = await fetch(url, {
                method: method,
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ Code: code, DiscountValue: parseFloat(discountValue), IsActive: isActive })
            });

            if (!response.ok) {
                const errorText = await response.text();
                console.error(`Error saving coupon (${response.status}):`, errorText);
                showAlert(`Error saving: ${errorText}`, 'danger');
                return;
            }

            const data = await response.json();
            showAlert(data.message, 'success');
            $("#couponModal").modal("hide");
            loadCoupons();

        } catch (error) {
            console.error("An unexpected error occurred while saving the coupon:", error);
            showAlert('An error occurred while saving the coupon.', 'danger');
        }
    }

    async function deleteCoupon(id) {
        if (!confirm("Are you sure you want to delete this coupon?")) return;

        try {
            const response = await fetch(`/Admin/Coupon/Delete/${id}`, { method: "DELETE" });

            if (!response.ok) {
                const errorText = await response.text();
                console.error(`Error deleting coupon (${response.status}):`, errorText);
                showAlert(`Error deleting: ${errorText}`, 'danger');
                return;
            }

            const data = await response.json();
            showAlert(data.message, 'success');
            loadCoupons();

        } catch (error) {
            console.error("An unexpected error occurred while deleting the coupon:", error);
            showAlert('An error occurred while deleting the coupon.', 'danger');
        }
    }

    function showAlert(message, type = 'info') {
        const alertDiv = $('#couponErrorMessage');
        alertDiv.removeClass('alert-success alert-danger alert-info');
        alertDiv.addClass(`alert-${type}`);
        alertDiv.text(message);
        alertDiv.slideDown();
    }
</script>