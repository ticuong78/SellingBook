@using SellingBook.Models.DTO
@inject IViewLocalizer Localizer
@model ProductCartItemViewModel

@{
    ViewData["Title"] = Localizer["CheckoutTitle"];
    var Products = Model.Products;
    var CartItems = Model.CartItems;
    var TotalPrice = CartItems.Sum(item => item.CartItemPrice);
}

<div class="container mt-4">
    <h2 class="text-center mb-4">@Localizer["CartAndCheckout"]</h2>

    @if (!CartItems.Any() || !Products.Any())
    {
        <div class="text-center">
            <h4 class="text-danger">@Localizer["NoProductFound"]</h4>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-8">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover">
                        <thead class="table-dark">
                            <tr class="text-center">
                                <th><input type="checkbox" id="selectAll" onclick="toggleAllItems()"></th>
                                <th>@Localizer["ProductName"]</th>
                                <th>@Localizer["Price"]</th>
                                <th>@Localizer["Quantity"]</th>
                                <th>@Localizer["TotalItemPrice"]</th>
                                <th>@Localizer["Action"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var cartItem in CartItems)
                            {
                                var product = Products.FirstOrDefault(pro => pro.ProductId == cartItem.ProductId);
                                if (product == null) continue;
                                <tr class="text-center">
                                    <td>
                                        <input type="checkbox" class="cartItemCheckbox" value="@cartItem.CartItemId" onchange="updateTotal()" data-id="@product.ProductId">
                                    </td>
                                    <td>@product.ProductName</td>
                                    <td>@product.ProductPrice.ToString("#,##0") <u>đ</u></td>
                                    <td>@cartItem.CartItemQuantity</td>
                                    <td>@cartItem.CartItemPrice.ToString("#,##0") <u>đ</u></td>
                                    <td>
                                        <form method="post" asp-action="DeleteCartItem" asp-route-cartItemId="@cartItem.CartItemId">
                                            <button type="submit" class="btn btn-primary btn-sm">
                                                <i class="fas fa-edit"></i> @Localizer["Delete"]
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card p-3 shadow-sm">
                    <h4 class="text-center">@Localizer["PaymentMethodTitle"]</h4>
                    <p><strong>@Localizer["TotalPrice"]</strong> <span id="selectedTotalPrice">0 <u>đ</u></span></p>

                    <form id="paymentForm">
                        <div class="form-check mt-2">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" checked>
                            <label class="form-check-label" for="cashOnDelivery">@Localizer["CashOnDelivery"]</label>
                        </div>
                        <div class="form-check mt-2">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer">
                            <label class="form-check-label" for="bankTransfer">@Localizer["BankTransfer"]</label>
                        </div>
                        <div class="form-check mt-2">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="creditCard">
                            <label class="form-check-label" for="creditCard">@Localizer["CreditCard"]</label>
                        </div>
                        <div class="form-check mt-2">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="vnpay">
                            <label class="form-check-label" for="vnpay">@Localizer["Vnpay"]</label>
                        </div>

                        <div class="form-group mt-3">
                            <label for="discountCode">@Localizer["DiscountCode"]:</label>
                            <div class="input-group">
                                <select id="discountCode" class="form-control">
                                    <option value="">Chọn mã giảm giá</option>
                                    <!-- Danh sách mã giảm giá sẽ được điền vào đây từ backend -->
                                </select>
                                <button type="button" class="btn btn-primary" onclick="applyDiscount()">@Localizer["ApplyDiscount"]</button>
                            </div>
                            <small id="discountMessage" class="text-success"></small>
                        </div>


                        <hr>
                        <div class="d-grid">
                            <button type="button" class="btn btn-success" onclick="processPayment()">
                                <i class="fas fa-shopping-cart"></i> @Localizer["CheckoutButton"]
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
</div>
<script>
    async function loadDiscountCodes() {
        try {
            const response = await fetch('/Customer/Coupon/GetCoupons'); // Lấy danh sách mã giảm giá từ backend
            const text = await response.text(); // get raw text first
            console.log(text); // <- see what the server actually sent
            const coupons = JSON.parse(text); // manually parse

            const discountCodeSelect = document.getElementById('discountCode');
            coupons.forEach(coupon => {
                const option = document.createElement('option');
                option.value = coupon.code;
                option.textContent = `Mã: ${coupon.code} - Giảm ${coupon.discountValue.toLocaleString()} đ`;
                discountCodeSelect.appendChild(option);
            });
        } catch (error) {
            console.error("Không thể tải mã giảm giá.", error);
        }
    }

    window.onload = loadDiscountCodes; // Tải danh sách mã giảm giá khi trang web được tải
</script>